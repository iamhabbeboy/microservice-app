version:  '3'
services:
  frontend-service:
    build: 
      context: ./frontend-service
      dockerfile: frontend-service.dockerfile
    ports:
      - "80:8080"
  listener-service:
    build: 
      context: ./listener-service
      dockerfile: listener-service.dockerfile
    restart: unless-stopped
    environment:
      kafkaURL: kafka:9092
      topic: logger
      groupID: logger-group
  logger-service:
    build: 
      context: ./logger-service
      dockerfile: logger-service.dockerfile
    ports:
      - "3500:3500"
    environment:
      mongoURL: mongodb://mongo:27017
      dbName: demo_app
      collectionName: logger_db
  broker-service:
    build: 
      context: ./broker-service
      dockerfile: broker-service.dockerfile
    ports:
      - "8083:1323"
    environment:
      kafkaURL: kafka:9092
      topic: logger
  php:
    container_name: php
    build:
      context: ./auth-service
      dockerfile: auth-service.dockerfile

    env_file:
      - auth-service/auth.env
    volumes:
      - ./auth-service:/var/www
    ports:
      - "9000:9000"
  auth-service:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "8082:80"
    volumes:
      - ./auth-service:/var/www
      - ./auth-service/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:29092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CONNECT_BOOTSTRAP_SERVERS: localhost:9092
      KAFKA_CONNECT_REST_PORT: 8082
      KAFKA_CONNECT_REST_ADVERTISED_HOST_NAME: "localhost"
      KAFKA_CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      KAFKA_CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      KAFKA_CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: 0
      KAFKA_CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: 0
      KAFKA_CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      KAFKA_CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      KAFKA_CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE: 0
      KAFKA_CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE: 0
      KAFKA_CREATE_TOPICS: "logger:1:0"
    depends_on:
      - zookeeper
  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data1/mongo/:/data/db